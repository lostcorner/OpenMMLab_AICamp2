2023/06/09 20:55:00 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.4 (main, Mar 31 2022, 08:41:55) [GCC 7.5.0]
    CUDA available: True
    numpy_random_seed: 624913975
    GPU 0: GeForce GTX 1080 Ti
    CUDA_HOME: /usr/local/cuda-10.1
    NVCC: Cuda compilation tools, release 10.1, V10.1.10
    GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
    PyTorch: 1.11.0+cu102
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.12.0+cu102
    OpenCV: 4.7.0
    MMEngine: 0.7.3

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    deterministic: False
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/09 20:55:01 - mmengine - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=30,
        in_channels=2048,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),
        topk=(1, 5)),
    init_cfg=dict(
        type='Pretrained',
        checkpoint=
        'https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth'
    ))
dataset_type = 'CustomDataset'
data_preprocessor = dict(
    num_classes=1000,
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', scale=224),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='PackInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='ResizeEdge', scale=256, edge='short'),
    dict(type='CenterCrop', crop_size=224),
    dict(type='PackInputs')
]
train_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=32,
    num_workers=5,
    dataset=dict(
        type='CustomDataset',
        data_root='../../data/fruit/train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', scale=224),
            dict(type='RandomFlip', prob=0.5, direction='horizontal'),
            dict(type='PackInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=True))
val_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=32,
    num_workers=5,
    dataset=dict(
        type='CustomDataset',
        data_root='../../data/fruit/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='ResizeEdge', scale=256, edge='short'),
            dict(type='CenterCrop', crop_size=224),
            dict(type='PackInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=False))
val_evaluator = dict(type='Accuracy', topk=(1, 5))
test_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=32,
    num_workers=5,
    dataset=dict(
        type='CustomDataset',
        data_root='../../data/fruit/test',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='ResizeEdge', scale=256, edge='short'),
            dict(type='CenterCrop', crop_size=224),
            dict(type='PackInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=False))
test_evaluator = dict(type='Accuracy', topk=(1, 5))
optim_wrapper = dict(
    optimizer=dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001))
param_scheduler = dict(
    type='MultiStepLR', by_epoch=True, milestones=[30, 60, 90], gamma=0.1)
train_cfg = dict(by_epoch=True, max_epochs=50, val_interval=1)
val_cfg = dict()
test_cfg = dict()
auto_scale_lr = dict(base_batch_size=256)
default_scope = 'mmpretrain'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=100),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook', interval=1, save_best='auto', max_keep_ckpts=5),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='VisualizationHook', enable=False))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='UniversalVisualizer', vis_backends=[dict(type='LocalVisBackend')])
log_level = 'INFO'
load_from = None
resume = False
randomness = dict(seed=None, deterministic=False)
launcher = 'none'
work_dir = './exp'

2023/06/09 20:55:05 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/09 20:55:05 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/09 20:55:06 - mmengine - INFO - load model from: https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth
2023/06/09 20:55:06 - mmengine - INFO - Loads checkpoint by http backend from path: https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth
2023/06/09 20:55:06 - mmengine - WARNING - The model and loaded state dict do not match exactly

size mismatch for head.fc.weight: copying a param with shape torch.Size([1000, 2048]) from checkpoint, the shape in current model is torch.Size([30, 2048]).
size mismatch for head.fc.bias: copying a param with shape torch.Size([1000]) from checkpoint, the shape in current model is torch.Size([30]).
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

head.fc.weight - torch.Size([30, 2048]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([30]): 
NormalInit: mean=0, std=0.01, bias=0 
2023/06/09 20:55:06 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/09 20:55:06 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/09 20:55:06 - mmengine - INFO - Checkpoints will be saved to /home/hesh/work/mmpretrain/projects/fruits/exp.
2023/06/09 20:55:24 - mmengine - INFO - Epoch(train)  [1][100/110]  lr: 1.0000e-02  eta: 0:15:53  time: 0.1734  data_time: 0.0006  memory: 2962  loss: 1.3211
2023/06/09 20:55:26 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:55:26 - mmengine - INFO - Saving checkpoint at 1 epochs
2023/06/09 20:55:28 - mmengine - INFO - Epoch(val) [1][14/14]    accuracy/top1: 63.0734  accuracy/top5: 88.3027  data_time: 0.0150  time: 0.0664
2023/06/09 20:55:29 - mmengine - INFO - The best checkpoint with 63.0734 accuracy/top1 at 1 epoch is saved to best_accuracy_top1_epoch_1.pth.
2023/06/09 20:55:46 - mmengine - INFO - Epoch(train)  [2][100/110]  lr: 1.0000e-02  eta: 0:15:28  time: 0.1736  data_time: 0.0006  memory: 2962  loss: 1.0689
2023/06/09 20:55:48 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:55:48 - mmengine - INFO - Saving checkpoint at 2 epochs
2023/06/09 20:55:50 - mmengine - INFO - Epoch(val) [2][14/14]    accuracy/top1: 71.5596  accuracy/top5: 95.4128  data_time: 0.0077  time: 0.0581
2023/06/09 20:55:50 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_1.pth is removed
2023/06/09 20:55:51 - mmengine - INFO - The best checkpoint with 71.5596 accuracy/top1 at 2 epoch is saved to best_accuracy_top1_epoch_2.pth.
2023/06/09 20:56:08 - mmengine - INFO - Epoch(train)  [3][100/110]  lr: 1.0000e-02  eta: 0:15:07  time: 0.1739  data_time: 0.0005  memory: 2962  loss: 0.8474
2023/06/09 20:56:10 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:56:10 - mmengine - INFO - Saving checkpoint at 3 epochs
2023/06/09 20:56:12 - mmengine - INFO - Epoch(val) [3][14/14]    accuracy/top1: 76.8349  accuracy/top5: 94.7248  data_time: 0.0082  time: 0.0584
2023/06/09 20:56:12 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_2.pth is removed
2023/06/09 20:56:13 - mmengine - INFO - The best checkpoint with 76.8349 accuracy/top1 at 3 epoch is saved to best_accuracy_top1_epoch_3.pth.
2023/06/09 20:56:30 - mmengine - INFO - Epoch(train)  [4][100/110]  lr: 1.0000e-02  eta: 0:14:47  time: 0.1736  data_time: 0.0005  memory: 2962  loss: 0.7451
2023/06/09 20:56:32 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:56:32 - mmengine - INFO - Saving checkpoint at 4 epochs
2023/06/09 20:56:34 - mmengine - INFO - Epoch(val) [4][14/14]    accuracy/top1: 78.8991  accuracy/top5: 96.5596  data_time: 0.0082  time: 0.0583
2023/06/09 20:56:34 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_3.pth is removed
2023/06/09 20:56:34 - mmengine - INFO - The best checkpoint with 78.8991 accuracy/top1 at 4 epoch is saved to best_accuracy_top1_epoch_4.pth.
2023/06/09 20:56:52 - mmengine - INFO - Epoch(train)  [5][100/110]  lr: 1.0000e-02  eta: 0:14:27  time: 0.1735  data_time: 0.0005  memory: 2962  loss: 0.5841
2023/06/09 20:56:54 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:56:54 - mmengine - INFO - Saving checkpoint at 5 epochs
2023/06/09 20:56:56 - mmengine - INFO - Epoch(val) [5][14/14]    accuracy/top1: 82.3394  accuracy/top5: 96.3303  data_time: 0.0123  time: 0.0625
2023/06/09 20:56:56 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_4.pth is removed
2023/06/09 20:56:56 - mmengine - INFO - The best checkpoint with 82.3394 accuracy/top1 at 5 epoch is saved to best_accuracy_top1_epoch_5.pth.
2023/06/09 20:57:14 - mmengine - INFO - Epoch(train)  [6][100/110]  lr: 1.0000e-02  eta: 0:14:08  time: 0.1739  data_time: 0.0005  memory: 2962  loss: 0.5945
2023/06/09 20:57:16 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:57:16 - mmengine - INFO - Saving checkpoint at 6 epochs
2023/06/09 20:57:18 - mmengine - INFO - Epoch(val) [6][14/14]    accuracy/top1: 81.1927  accuracy/top5: 95.8716  data_time: 0.0126  time: 0.0628
2023/06/09 20:57:35 - mmengine - INFO - Epoch(train)  [7][100/110]  lr: 1.0000e-02  eta: 0:13:48  time: 0.1739  data_time: 0.0006  memory: 2962  loss: 0.5151
2023/06/09 20:57:37 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:57:37 - mmengine - INFO - Saving checkpoint at 7 epochs
2023/06/09 20:57:39 - mmengine - INFO - Epoch(val) [7][14/14]    accuracy/top1: 77.2936  accuracy/top5: 95.6422  data_time: 0.0093  time: 0.0594
2023/06/09 20:57:56 - mmengine - INFO - Epoch(train)  [8][100/110]  lr: 1.0000e-02  eta: 0:13:29  time: 0.1739  data_time: 0.0005  memory: 2962  loss: 0.5101
2023/06/09 20:57:58 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:57:58 - mmengine - INFO - Saving checkpoint at 8 epochs
2023/06/09 20:58:00 - mmengine - INFO - Epoch(val) [8][14/14]    accuracy/top1: 82.7982  accuracy/top5: 98.3945  data_time: 0.0085  time: 0.0586
2023/06/09 20:58:00 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_5.pth is removed
2023/06/09 20:58:01 - mmengine - INFO - The best checkpoint with 82.7982 accuracy/top1 at 8 epoch is saved to best_accuracy_top1_epoch_8.pth.
2023/06/09 20:58:18 - mmengine - INFO - Epoch(train)  [9][100/110]  lr: 1.0000e-02  eta: 0:13:10  time: 0.1736  data_time: 0.0005  memory: 2962  loss: 0.4920
2023/06/09 20:58:20 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:58:20 - mmengine - INFO - Saving checkpoint at 9 epochs
2023/06/09 20:58:22 - mmengine - INFO - Epoch(val) [9][14/14]    accuracy/top1: 84.8624  accuracy/top5: 98.8532  data_time: 0.0078  time: 0.0581
2023/06/09 20:58:22 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_8.pth is removed
2023/06/09 20:58:23 - mmengine - INFO - The best checkpoint with 84.8624 accuracy/top1 at 9 epoch is saved to best_accuracy_top1_epoch_9.pth.
2023/06/09 20:58:25 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:58:40 - mmengine - INFO - Epoch(train) [10][100/110]  lr: 1.0000e-02  eta: 0:12:50  time: 0.1736  data_time: 0.0006  memory: 2962  loss: 0.4270
2023/06/09 20:58:42 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:58:42 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/09 20:58:44 - mmengine - INFO - Epoch(val) [10][14/14]    accuracy/top1: 84.8624  accuracy/top5: 97.9358  data_time: 0.0097  time: 0.0598
2023/06/09 20:59:01 - mmengine - INFO - Epoch(train) [11][100/110]  lr: 1.0000e-02  eta: 0:12:31  time: 0.1737  data_time: 0.0005  memory: 2962  loss: 0.4111
2023/06/09 20:59:03 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:59:03 - mmengine - INFO - Saving checkpoint at 11 epochs
2023/06/09 20:59:05 - mmengine - INFO - Epoch(val) [11][14/14]    accuracy/top1: 83.0275  accuracy/top5: 98.1651  data_time: 0.0083  time: 0.0585
2023/06/09 20:59:22 - mmengine - INFO - Epoch(train) [12][100/110]  lr: 1.0000e-02  eta: 0:12:12  time: 0.1738  data_time: 0.0006  memory: 2962  loss: 0.3580
2023/06/09 20:59:24 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:59:24 - mmengine - INFO - Saving checkpoint at 12 epochs
2023/06/09 20:59:26 - mmengine - INFO - Epoch(val) [12][14/14]    accuracy/top1: 84.6330  accuracy/top5: 98.3945  data_time: 0.0082  time: 0.0584
2023/06/09 20:59:44 - mmengine - INFO - Epoch(train) [13][100/110]  lr: 1.0000e-02  eta: 0:11:53  time: 0.1739  data_time: 0.0006  memory: 2962  loss: 0.3316
2023/06/09 20:59:45 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 20:59:45 - mmengine - INFO - Saving checkpoint at 13 epochs
2023/06/09 20:59:47 - mmengine - INFO - Epoch(val) [13][14/14]    accuracy/top1: 82.7982  accuracy/top5: 97.9358  data_time: 0.0076  time: 0.0578
2023/06/09 21:00:05 - mmengine - INFO - Epoch(train) [14][100/110]  lr: 1.0000e-02  eta: 0:11:34  time: 0.1735  data_time: 0.0005  memory: 2962  loss: 0.4278
2023/06/09 21:00:06 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:00:06 - mmengine - INFO - Saving checkpoint at 14 epochs
2023/06/09 21:00:08 - mmengine - INFO - Epoch(val) [14][14/14]    accuracy/top1: 85.3211  accuracy/top5: 98.3945  data_time: 0.0088  time: 0.0590
2023/06/09 21:00:08 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_9.pth is removed
2023/06/09 21:00:09 - mmengine - INFO - The best checkpoint with 85.3211 accuracy/top1 at 14 epoch is saved to best_accuracy_top1_epoch_14.pth.
2023/06/09 21:00:27 - mmengine - INFO - Epoch(train) [15][100/110]  lr: 1.0000e-02  eta: 0:11:14  time: 0.1736  data_time: 0.0005  memory: 2962  loss: 0.3261
2023/06/09 21:00:28 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:00:28 - mmengine - INFO - Saving checkpoint at 15 epochs
2023/06/09 21:00:30 - mmengine - INFO - Epoch(val) [15][14/14]    accuracy/top1: 84.6330  accuracy/top5: 98.1651  data_time: 0.0086  time: 0.0589
2023/06/09 21:00:48 - mmengine - INFO - Epoch(train) [16][100/110]  lr: 1.0000e-02  eta: 0:10:55  time: 0.1739  data_time: 0.0006  memory: 2962  loss: 0.3098
2023/06/09 21:00:50 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:00:50 - mmengine - INFO - Saving checkpoint at 16 epochs
2023/06/09 21:00:51 - mmengine - INFO - Epoch(val) [16][14/14]    accuracy/top1: 84.6330  accuracy/top5: 98.1651  data_time: 0.0085  time: 0.0588
2023/06/09 21:01:09 - mmengine - INFO - Epoch(train) [17][100/110]  lr: 1.0000e-02  eta: 0:10:36  time: 0.1736  data_time: 0.0007  memory: 2962  loss: 0.3811
2023/06/09 21:01:11 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:01:11 - mmengine - INFO - Saving checkpoint at 17 epochs
2023/06/09 21:01:13 - mmengine - INFO - Epoch(val) [17][14/14]    accuracy/top1: 84.6330  accuracy/top5: 98.3945  data_time: 0.0076  time: 0.0579
2023/06/09 21:01:30 - mmengine - INFO - Epoch(train) [18][100/110]  lr: 1.0000e-02  eta: 0:10:17  time: 0.1737  data_time: 0.0006  memory: 2962  loss: 0.3546
2023/06/09 21:01:32 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:01:32 - mmengine - INFO - Saving checkpoint at 18 epochs
2023/06/09 21:01:34 - mmengine - INFO - Epoch(val) [18][14/14]    accuracy/top1: 86.4679  accuracy/top5: 98.1651  data_time: 0.0082  time: 0.0583
2023/06/09 21:01:34 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_14.pth is removed
2023/06/09 21:01:35 - mmengine - INFO - The best checkpoint with 86.4679 accuracy/top1 at 18 epoch is saved to best_accuracy_top1_epoch_18.pth.
2023/06/09 21:01:38 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:01:52 - mmengine - INFO - Epoch(train) [19][100/110]  lr: 1.0000e-02  eta: 0:09:57  time: 0.1743  data_time: 0.0006  memory: 2962  loss: 0.2574
2023/06/09 21:01:54 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:01:54 - mmengine - INFO - Saving checkpoint at 19 epochs
2023/06/09 21:01:56 - mmengine - INFO - Epoch(val) [19][14/14]    accuracy/top1: 86.9266  accuracy/top5: 99.0826  data_time: 0.0083  time: 0.0584
2023/06/09 21:01:56 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_18.pth is removed
2023/06/09 21:01:57 - mmengine - INFO - The best checkpoint with 86.9266 accuracy/top1 at 19 epoch is saved to best_accuracy_top1_epoch_19.pth.
2023/06/09 21:02:14 - mmengine - INFO - Epoch(train) [20][100/110]  lr: 1.0000e-02  eta: 0:09:38  time: 0.1737  data_time: 0.0006  memory: 2962  loss: 0.3086
2023/06/09 21:02:16 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:02:16 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/06/09 21:02:18 - mmengine - INFO - Epoch(val) [20][14/14]    accuracy/top1: 82.3394  accuracy/top5: 97.2477  data_time: 0.0086  time: 0.0589
2023/06/09 21:02:35 - mmengine - INFO - Epoch(train) [21][100/110]  lr: 1.0000e-02  eta: 0:09:19  time: 0.1737  data_time: 0.0006  memory: 2962  loss: 0.2669
2023/06/09 21:02:37 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:02:37 - mmengine - INFO - Saving checkpoint at 21 epochs
2023/06/09 21:02:39 - mmengine - INFO - Epoch(val) [21][14/14]    accuracy/top1: 90.1376  accuracy/top5: 99.0826  data_time: 0.0077  time: 0.0578
2023/06/09 21:02:39 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_19.pth is removed
2023/06/09 21:02:40 - mmengine - INFO - The best checkpoint with 90.1376 accuracy/top1 at 21 epoch is saved to best_accuracy_top1_epoch_21.pth.
2023/06/09 21:02:57 - mmengine - INFO - Epoch(train) [22][100/110]  lr: 1.0000e-02  eta: 0:09:00  time: 0.1737  data_time: 0.0005  memory: 2962  loss: 0.2988
2023/06/09 21:02:59 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:02:59 - mmengine - INFO - Saving checkpoint at 22 epochs
2023/06/09 21:03:01 - mmengine - INFO - Epoch(val) [22][14/14]    accuracy/top1: 87.8440  accuracy/top5: 97.9358  data_time: 0.0095  time: 0.0597
2023/06/09 21:03:18 - mmengine - INFO - Epoch(train) [23][100/110]  lr: 1.0000e-02  eta: 0:08:40  time: 0.1741  data_time: 0.0005  memory: 2962  loss: 0.3280
2023/06/09 21:03:20 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:03:20 - mmengine - INFO - Saving checkpoint at 23 epochs
2023/06/09 21:03:22 - mmengine - INFO - Epoch(val) [23][14/14]    accuracy/top1: 86.6972  accuracy/top5: 97.9358  data_time: 0.0082  time: 0.0583
2023/06/09 21:03:39 - mmengine - INFO - Epoch(train) [24][100/110]  lr: 1.0000e-02  eta: 0:08:21  time: 0.1734  data_time: 0.0005  memory: 2962  loss: 0.2309
2023/06/09 21:03:41 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:03:41 - mmengine - INFO - Saving checkpoint at 24 epochs
2023/06/09 21:03:43 - mmengine - INFO - Epoch(val) [24][14/14]    accuracy/top1: 87.3853  accuracy/top5: 98.6238  data_time: 0.0077  time: 0.0578
2023/06/09 21:04:00 - mmengine - INFO - Epoch(train) [25][100/110]  lr: 1.0000e-02  eta: 0:08:02  time: 0.1736  data_time: 0.0005  memory: 2962  loss: 0.2204
2023/06/09 21:04:02 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:04:02 - mmengine - INFO - Saving checkpoint at 25 epochs
2023/06/09 21:04:04 - mmengine - INFO - Epoch(val) [25][14/14]    accuracy/top1: 85.3211  accuracy/top5: 97.7064  data_time: 0.0070  time: 0.0570
2023/06/09 21:04:21 - mmengine - INFO - Epoch(train) [26][100/110]  lr: 1.0000e-02  eta: 0:07:43  time: 0.1740  data_time: 0.0005  memory: 2962  loss: 0.2787
2023/06/09 21:04:23 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:04:23 - mmengine - INFO - Saving checkpoint at 26 epochs
2023/06/09 21:04:25 - mmengine - INFO - Epoch(val) [26][14/14]    accuracy/top1: 88.9908  accuracy/top5: 98.6238  data_time: 0.0094  time: 0.0594
2023/06/09 21:04:42 - mmengine - INFO - Epoch(train) [27][100/110]  lr: 1.0000e-02  eta: 0:07:23  time: 0.1737  data_time: 0.0005  memory: 2962  loss: 0.1589
2023/06/09 21:04:44 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:04:44 - mmengine - INFO - Saving checkpoint at 27 epochs
2023/06/09 21:04:46 - mmengine - INFO - Epoch(val) [27][14/14]    accuracy/top1: 90.3670  accuracy/top5: 98.3945  data_time: 0.0079  time: 0.0580
2023/06/09 21:04:46 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_21.pth is removed
2023/06/09 21:04:47 - mmengine - INFO - The best checkpoint with 90.3670 accuracy/top1 at 27 epoch is saved to best_accuracy_top1_epoch_27.pth.
2023/06/09 21:04:52 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:05:04 - mmengine - INFO - Epoch(train) [28][100/110]  lr: 1.0000e-02  eta: 0:07:04  time: 0.1740  data_time: 0.0005  memory: 2962  loss: 0.2581
2023/06/09 21:05:06 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:05:06 - mmengine - INFO - Saving checkpoint at 28 epochs
2023/06/09 21:05:08 - mmengine - INFO - Epoch(val) [28][14/14]    accuracy/top1: 87.6147  accuracy/top5: 98.8532  data_time: 0.0071  time: 0.0571
2023/06/09 21:05:25 - mmengine - INFO - Epoch(train) [29][100/110]  lr: 1.0000e-02  eta: 0:06:45  time: 0.1735  data_time: 0.0005  memory: 2962  loss: 0.2275
2023/06/09 21:05:27 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:05:27 - mmengine - INFO - Saving checkpoint at 29 epochs
2023/06/09 21:05:29 - mmengine - INFO - Epoch(val) [29][14/14]    accuracy/top1: 88.5321  accuracy/top5: 98.8532  data_time: 0.0077  time: 0.0578
2023/06/09 21:05:46 - mmengine - INFO - Epoch(train) [30][100/110]  lr: 1.0000e-02  eta: 0:06:26  time: 0.1736  data_time: 0.0005  memory: 2962  loss: 0.2882
2023/06/09 21:05:48 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:05:48 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/06/09 21:05:50 - mmengine - INFO - Epoch(val) [30][14/14]    accuracy/top1: 86.0092  accuracy/top5: 98.3945  data_time: 0.0078  time: 0.0579
2023/06/09 21:06:07 - mmengine - INFO - Epoch(train) [31][100/110]  lr: 1.0000e-03  eta: 0:06:07  time: 0.1740  data_time: 0.0005  memory: 2962  loss: 0.1376
2023/06/09 21:06:09 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:06:09 - mmengine - INFO - Saving checkpoint at 31 epochs
2023/06/09 21:06:11 - mmengine - INFO - Epoch(val) [31][14/14]    accuracy/top1: 90.5963  accuracy/top5: 98.6238  data_time: 0.0076  time: 0.0578
2023/06/09 21:06:11 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_27.pth is removed
2023/06/09 21:06:12 - mmengine - INFO - The best checkpoint with 90.5963 accuracy/top1 at 31 epoch is saved to best_accuracy_top1_epoch_31.pth.
2023/06/09 21:06:29 - mmengine - INFO - Epoch(train) [32][100/110]  lr: 1.0000e-03  eta: 0:05:47  time: 0.1736  data_time: 0.0005  memory: 2962  loss: 0.1363
2023/06/09 21:06:31 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:06:31 - mmengine - INFO - Saving checkpoint at 32 epochs
2023/06/09 21:06:33 - mmengine - INFO - Epoch(val) [32][14/14]    accuracy/top1: 91.7431  accuracy/top5: 98.8532  data_time: 0.0077  time: 0.0579
2023/06/09 21:06:33 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_31.pth is removed
2023/06/09 21:06:34 - mmengine - INFO - The best checkpoint with 91.7431 accuracy/top1 at 32 epoch is saved to best_accuracy_top1_epoch_32.pth.
2023/06/09 21:06:51 - mmengine - INFO - Epoch(train) [33][100/110]  lr: 1.0000e-03  eta: 0:05:28  time: 0.1742  data_time: 0.0005  memory: 2962  loss: 0.1215
2023/06/09 21:06:53 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:06:53 - mmengine - INFO - Saving checkpoint at 33 epochs
2023/06/09 21:06:55 - mmengine - INFO - Epoch(val) [33][14/14]    accuracy/top1: 91.7431  accuracy/top5: 98.6238  data_time: 0.0088  time: 0.0588
2023/06/09 21:07:12 - mmengine - INFO - Epoch(train) [34][100/110]  lr: 1.0000e-03  eta: 0:05:09  time: 0.1735  data_time: 0.0005  memory: 2962  loss: 0.0994
2023/06/09 21:07:14 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:07:14 - mmengine - INFO - Saving checkpoint at 34 epochs
2023/06/09 21:07:16 - mmengine - INFO - Epoch(val) [34][14/14]    accuracy/top1: 92.4312  accuracy/top5: 98.8532  data_time: 0.0079  time: 0.0582
2023/06/09 21:07:16 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_32.pth is removed
2023/06/09 21:07:17 - mmengine - INFO - The best checkpoint with 92.4312 accuracy/top1 at 34 epoch is saved to best_accuracy_top1_epoch_34.pth.
2023/06/09 21:07:34 - mmengine - INFO - Epoch(train) [35][100/110]  lr: 1.0000e-03  eta: 0:04:50  time: 0.1738  data_time: 0.0005  memory: 2962  loss: 0.1402
2023/06/09 21:07:36 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:07:36 - mmengine - INFO - Saving checkpoint at 35 epochs
2023/06/09 21:07:38 - mmengine - INFO - Epoch(val) [35][14/14]    accuracy/top1: 93.1193  accuracy/top5: 98.8532  data_time: 0.0080  time: 0.0581
2023/06/09 21:07:38 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_34.pth is removed
2023/06/09 21:07:38 - mmengine - INFO - The best checkpoint with 93.1193 accuracy/top1 at 35 epoch is saved to best_accuracy_top1_epoch_35.pth.
2023/06/09 21:07:56 - mmengine - INFO - Epoch(train) [36][100/110]  lr: 1.0000e-03  eta: 0:04:30  time: 0.1736  data_time: 0.0005  memory: 2962  loss: 0.0813
2023/06/09 21:07:58 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:07:58 - mmengine - INFO - Saving checkpoint at 36 epochs
2023/06/09 21:07:59 - mmengine - INFO - Epoch(val) [36][14/14]    accuracy/top1: 92.6605  accuracy/top5: 98.8532  data_time: 0.0079  time: 0.0579
2023/06/09 21:08:06 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:08:17 - mmengine - INFO - Epoch(train) [37][100/110]  lr: 1.0000e-03  eta: 0:04:11  time: 0.1742  data_time: 0.0005  memory: 2962  loss: 0.0510
2023/06/09 21:08:19 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:08:19 - mmengine - INFO - Saving checkpoint at 37 epochs
2023/06/09 21:08:20 - mmengine - INFO - Epoch(val) [37][14/14]    accuracy/top1: 92.6605  accuracy/top5: 98.6238  data_time: 0.0077  time: 0.0579
2023/06/09 21:08:38 - mmengine - INFO - Epoch(train) [38][100/110]  lr: 1.0000e-03  eta: 0:03:52  time: 0.1740  data_time: 0.0006  memory: 2962  loss: 0.0566
2023/06/09 21:08:40 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:08:40 - mmengine - INFO - Saving checkpoint at 38 epochs
2023/06/09 21:08:42 - mmengine - INFO - Epoch(val) [38][14/14]    accuracy/top1: 92.8899  accuracy/top5: 98.6238  data_time: 0.0078  time: 0.0579
2023/06/09 21:08:59 - mmengine - INFO - Epoch(train) [39][100/110]  lr: 1.0000e-03  eta: 0:03:33  time: 0.1737  data_time: 0.0006  memory: 2962  loss: 0.0762
2023/06/09 21:09:01 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:09:01 - mmengine - INFO - Saving checkpoint at 39 epochs
2023/06/09 21:09:03 - mmengine - INFO - Epoch(val) [39][14/14]    accuracy/top1: 92.6605  accuracy/top5: 98.8532  data_time: 0.0077  time: 0.0578
2023/06/09 21:09:20 - mmengine - INFO - Epoch(train) [40][100/110]  lr: 1.0000e-03  eta: 0:03:14  time: 0.1736  data_time: 0.0006  memory: 2962  loss: 0.1029
2023/06/09 21:09:22 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:09:22 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/06/09 21:09:24 - mmengine - INFO - Epoch(val) [40][14/14]    accuracy/top1: 92.8899  accuracy/top5: 98.6238  data_time: 0.0069  time: 0.0570
2023/06/09 21:09:41 - mmengine - INFO - Epoch(train) [41][100/110]  lr: 1.0000e-03  eta: 0:02:54  time: 0.1740  data_time: 0.0006  memory: 2962  loss: 0.0855
2023/06/09 21:09:43 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:09:43 - mmengine - INFO - Saving checkpoint at 41 epochs
2023/06/09 21:09:45 - mmengine - INFO - Epoch(val) [41][14/14]    accuracy/top1: 93.1193  accuracy/top5: 98.8532  data_time: 0.0077  time: 0.0580
2023/06/09 21:10:02 - mmengine - INFO - Epoch(train) [42][100/110]  lr: 1.0000e-03  eta: 0:02:35  time: 0.1737  data_time: 0.0005  memory: 2962  loss: 0.0964
2023/06/09 21:10:04 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:10:04 - mmengine - INFO - Saving checkpoint at 42 epochs
2023/06/09 21:10:06 - mmengine - INFO - Epoch(val) [42][14/14]    accuracy/top1: 93.5780  accuracy/top5: 98.8532  data_time: 0.0099  time: 0.0602
2023/06/09 21:10:06 - mmengine - INFO - The previous best checkpoint /home/hesh/work/mmpretrain/projects/fruits/exp/best_accuracy_top1_epoch_35.pth is removed
2023/06/09 21:10:07 - mmengine - INFO - The best checkpoint with 93.5780 accuracy/top1 at 42 epoch is saved to best_accuracy_top1_epoch_42.pth.
2023/06/09 21:10:24 - mmengine - INFO - Epoch(train) [43][100/110]  lr: 1.0000e-03  eta: 0:02:16  time: 0.1736  data_time: 0.0006  memory: 2962  loss: 0.0459
2023/06/09 21:10:26 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:10:26 - mmengine - INFO - Saving checkpoint at 43 epochs
2023/06/09 21:10:28 - mmengine - INFO - Epoch(val) [43][14/14]    accuracy/top1: 92.6605  accuracy/top5: 98.6238  data_time: 0.0082  time: 0.0583
2023/06/09 21:10:45 - mmengine - INFO - Epoch(train) [44][100/110]  lr: 1.0000e-03  eta: 0:01:57  time: 0.1738  data_time: 0.0006  memory: 2962  loss: 0.0369
2023/06/09 21:10:47 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:10:47 - mmengine - INFO - Saving checkpoint at 44 epochs
2023/06/09 21:10:49 - mmengine - INFO - Epoch(val) [44][14/14]    accuracy/top1: 93.3486  accuracy/top5: 98.8532  data_time: 0.0077  time: 0.0579
2023/06/09 21:11:06 - mmengine - INFO - Epoch(train) [45][100/110]  lr: 1.0000e-03  eta: 0:01:37  time: 0.1743  data_time: 0.0006  memory: 2962  loss: 0.0747
2023/06/09 21:11:08 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:11:08 - mmengine - INFO - Saving checkpoint at 45 epochs
2023/06/09 21:11:10 - mmengine - INFO - Epoch(val) [45][14/14]    accuracy/top1: 93.1193  accuracy/top5: 98.8532  data_time: 0.0071  time: 0.0572
2023/06/09 21:11:18 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:11:27 - mmengine - INFO - Epoch(train) [46][100/110]  lr: 1.0000e-03  eta: 0:01:18  time: 0.1736  data_time: 0.0005  memory: 2962  loss: 0.0697
2023/06/09 21:11:29 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:11:29 - mmengine - INFO - Saving checkpoint at 46 epochs
2023/06/09 21:11:31 - mmengine - INFO - Epoch(val) [46][14/14]    accuracy/top1: 93.1193  accuracy/top5: 98.8532  data_time: 0.0073  time: 0.0576
2023/06/09 21:11:48 - mmengine - INFO - Epoch(train) [47][100/110]  lr: 1.0000e-03  eta: 0:00:59  time: 0.1735  data_time: 0.0006  memory: 2962  loss: 0.0591
2023/06/09 21:11:50 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:11:50 - mmengine - INFO - Saving checkpoint at 47 epochs
2023/06/09 21:11:52 - mmengine - INFO - Epoch(val) [47][14/14]    accuracy/top1: 93.1193  accuracy/top5: 98.8532  data_time: 0.0089  time: 0.0589
2023/06/09 21:12:09 - mmengine - INFO - Epoch(train) [48][100/110]  lr: 1.0000e-03  eta: 0:00:40  time: 0.1736  data_time: 0.0006  memory: 2962  loss: 0.0855
2023/06/09 21:12:11 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:12:11 - mmengine - INFO - Saving checkpoint at 48 epochs
2023/06/09 21:12:13 - mmengine - INFO - Epoch(val) [48][14/14]    accuracy/top1: 92.8899  accuracy/top5: 98.6238  data_time: 0.0077  time: 0.0579
2023/06/09 21:12:30 - mmengine - INFO - Epoch(train) [49][100/110]  lr: 1.0000e-03  eta: 0:00:20  time: 0.1737  data_time: 0.0006  memory: 2962  loss: 0.0918
2023/06/09 21:12:32 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:12:32 - mmengine - INFO - Saving checkpoint at 49 epochs
2023/06/09 21:12:34 - mmengine - INFO - Epoch(val) [49][14/14]    accuracy/top1: 93.1193  accuracy/top5: 99.0826  data_time: 0.0077  time: 0.0579
2023/06/09 21:12:52 - mmengine - INFO - Epoch(train) [50][100/110]  lr: 1.0000e-03  eta: 0:00:01  time: 0.1742  data_time: 0.0006  memory: 2962  loss: 0.0919
2023/06/09 21:12:53 - mmengine - INFO - Exp name: resnet50_finetune_20230609_205459
2023/06/09 21:12:53 - mmengine - INFO - Saving checkpoint at 50 epochs
2023/06/09 21:12:55 - mmengine - INFO - Epoch(val) [50][14/14]    accuracy/top1: 93.1193  accuracy/top5: 98.8532  data_time: 0.0080  time: 0.0581
